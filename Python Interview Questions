1. Benefits of using numpy. Why not List?
2. Decorators in Python.
3. Multiprocessing vs Multithreading, code example.
4 What is GIL, how does it works?
5. Mutuable vs imutable data types.
6. Built in data types
7. Benefits of dictionary over list.
8. Generators vs Iterators in Python, Examples, use of yield
9. Purpose of __init__ function, what does it serves
10. Library vs Module in python
11. range() vs xrange() in Python
12. .py and .pyc files
13. List and string slicing in python
14. Functions of list, tuple, set and dict
15. Initialize empty set, list, tuple and dict
16. Enumerate example in python
17. Benefits of the data structures
18. How to concatenate tuples
19. Array vs list, their benefits and uses
20. _a, __a, __a__ use of _ (underscores)
21. Copy and delete in dict
22. Shallow and deep copy
23. Anonymous function and lambda function in python, Examples
24. Break, Continue and pass statement
25. Pickling and Unpickling
26. Class and objects in python
27. Inheritance in python
28. Operator overloading in python
29. Abstraction and encapsulation in python
30. Diamond problem in inheritance
31. Multiple inheritance
32. explicit type conversion
33. *args and **kwargs uses
34. Read and write in python
35. Read a PDF document in python
36. Exception handling in Pyton
37. What is PIP, any alternatives or other package manager in other language
38. "f" string, format and replacement operation in Python
39. Implement recursion in python 
40. Unittest and Pytest in python
41. Examples of map, filter and reduce in python
42. Monkey Patching use case and its examples
43. Dunder or magic methods in python
44. Print multiple patterns in python

45. Connect SQL in python
46. Frameworks of python- Flask and FastAPI
47. How to start the app in the framework
48. Post and get methods, what are input sources to these methods
49. How can we pass send a file to a framwork ing get and post method
